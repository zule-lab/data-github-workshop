---
title: "ZULE's Data & GitHub Crash Course"
author: "Isabella Richmond & Kayleigh Hutt-Taylor"
date: January 30, 2024
format: 
  revealjs:
    theme: dark
editor: visual
---

# Part I: Prep Work

## Learning Goals

My goal for this workshop is to give everyone the tools to:

::: incremental
-   Confidently start a project in R
-   Manage files in a way that is reproducible and easy to understand
-   Allow people to document progress on their projects
-   Know one approach to publicly archiving projects
:::

## 

![](presentation_imgs/righttool.PNG){fig-align="center"}

::: aside
https://sciencecomputing.io/
:::

## Software Installation

-   **CHECK-IN: does everyone have everything working/installed?**
-   Absolutely the hardest part of this workshop
-   Thank you for doing homework!!

. . .

-   If you have technical issues throughout this presentation - raise your hand and we will either work through together or Kayleigh will help you troubleshoot

## Project Workflow with Git

![[biost\@ts Git Tutorial](https://biostats-r.github.io/biostats/github/1_Git_Tutorial.html)](https://biostats-r.github.io/biostats/github/Pics/gittutorial/0_workflow_git.png){fig-align="center"}

## Project Workflow with Git + Others

![[biost\@ts Git Tutorial](https://biostats-r.github.io/biostats/github/1_Git_Tutorial.html)](https://biostats-r.github.io/biostats/github/Pics/gittutorial/22_workflow2.png){fig-align="center"}

# Part II: GitHub

## GitHub & Version Control

![[Piled Higher and Deeper](https://phdcomics.com/comics/archive.php?comicid=1531)](http://www.phdcomics.com/comics/archive/phd101212s.gif){fig-align="center"}

## GitHub & Version Control

::: incremental
-   GitHub is a website-software that documents your progress on a project and allows you to do *version control*

    -   aka it takes snapshots of your progress across time so nothing gets lost

-   If you save rough drafts of your writing as you go along - that is version control

-   Really useful for when you want to go back/change your mind/re-run a test/etc.

-   Facilitates peace of mind + reproducible science + collaboration/sharing
:::

## The Basics of GitHub

-   5 basic jargon terms you need to know to use GitHub:
    -   Repository/repo: your project
    -   Clone: make a local copy of your project
    -   Commit: describe and commit to any changes you've made
    -   Push: send your changes to your online repo
    -   Pull: incorporate any changes to your local repo
    -   (BONUS branch: a side project)
-   *We will do all these things today!*

## Let's Make a Project!

[github.com](www.github.com)

![](presentation_imgs/newrepo.JPG){fig-align="center"}

## Let's Make a Project!

::: {layout-ncol="2"}
![](presentation_imgs/newrepo2.JPG)

[ZULE's GitHub](https://github.com/zule-lab) has lots of repositories (including examples) if you are looking for inspiration for folder organization, ReadMe documentation, metadata, etc.
:::

## Cloning

<div>

![](presentation_imgs/cloning2.png)

</div>

# Part III: R & RStudio

## Project Management in R

Good file structure is important because it [^1]

[^1]: [Software Carpentry Project Management](https://swcarpentry.github.io/r-novice-gapminder/02-project-intro/index.html)

::: incremental
-   Ensures the integrity of your data
-   Makes it easier to share your code with people
-   Makes it easier to upload your code/data with manuscript submission
-   Makes it easier to come back after a break
:::

## File Management for R

Best practices include (but are not limited to) [^2]

[^2]: [Software Carpentry Project Management](https://swcarpentry.github.io/r-novice-gapminder/02-project-intro/index.html)

::: incremental
-   Use an R Project file so that your project is easily shareable
-   Always treat raw data as read-only
-   Store cleaned data in a separate folder (or distinguish clearly)
-   Treat output as disposable - you should always be able to re-generate with script
-   Have separate function and figure scripts
:::

## Cleaning Data in R

-   Reproducible [^3]
-   Open-source and cross-platform
-   Reliable & clear
-   High-quality graphics
-   Great community & resources
-   Scales with datasets
-   Steep learning curve with a high payoff

[^3]: [Data Carpentry Data Analysis & Visualiation in R for Ecologists](https://datacarpentry.org/R-ecology-lesson/00-before-we-start.html)

## Cleaning Data in R 

There are some tasks that do not need to be "as reproducible" (e.g., fixing typos) - these can be done in OpenRefine.

In general if you are:

-   combining data sources

-   making decisions about the data itself (e.g., removing or adding data)

-   performing calculations

-   renaming things

Do this in R (you will be grateful later!)

## ["Tidy" (or clean) Data](https://www.jstatsoft.org/article/view/v059i10):

-   Framework for how data should be formatted for easy and efficient data cleaning created by [Hadley Wickham](http://hadley.nz/)
    -   Underpinnings of `tidyverse` packages (e.g. ggplot2)

Principles:

1.  Each variable forms a column
2.  Each observation forms a row
3.  Each type of observational unit forms a table

## Basic File Structure

![](presentation_imgs/filestructure.png)

# Part IV: GitHub (Again)

# Part V: Archiving Data

## Why Using Git is not Archiving

-   Does not have a DOI, so does not point to a specific moment in time

-   Can be changed continuously

-   Not dedicated to longevity

-   Can import GitHub repository to a true data archive

## Zenodo

## Resources

**This workshop - including examples & code can all be found [here](https://github.com/zule-lab/data-github-workshop) and formatted slides are [here](https://zule-lab.github.io/data-github-workshop)**

Software Carpentry: [R for Reproducible Scientific Analysis](https://swcarpentry.github.io/r-novice-gapminder/) & [Version Control with git](https://swcarpentry.github.io/git-novice/)

Data Carpentry: [Data Analysis & Visualization in R for Ecologists](https://datacarpentry.org/R-ecology-lesson/index.html) & [Data Organization in Spreadsheets for Ecologists](https://datacarpentry.org/R-ecology-lesson/index.html)

biost\@ts: [Version Control with Git and GitHub](https://biostats-r.github.io/biostats/github/)

Happy Git: [happygitwithr](https://happygitwithr.com/)

University of Bergen: [Open Access to Research Data](https://www.uib.no/en/ub/111372/open-access-research-data#metadata-describe-your-data)

## Resources

Smart People I Know: [Dr. Christie Bahlai's Reproducible Quantitative Methods Course](https://cbahlai.github.io/rqm-template/) & [Wildlife Ecology & Evolution Lab's Guide by Alec Robitaille](https://weel.gitlab.io/guide/) & [Val Lucet's Git Workshop](https://vlucet.github.io/git-and-github-with-r-workshop/)

**PLUS: check out our zup "stats" thread - lots of helpful resources! AND ASK YOUR LABMATES!!!!**
